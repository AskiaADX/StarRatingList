/* standard.css */
{%
Dim statementTextAlign =CurrentADC.PropValue("statementTextAlign")

Dim statementColourPrimary =CurrentADC.PropValue("statementColourPrimary")
Dim altStatementColourPrimary =CurrentADC.PropValue("altStatementColourPrimary")
Dim statementFontColour =CurrentADC.PropValue("statementFontColour")
Dim statementBorderColour =CurrentADC.PropValue("statementBorderColour")
Dim statementBorderRadius =CurrentADC.PropValue("statementBorderRadius")
Dim statementBorderThickness =CurrentADC.PropValue("statementBorderThickness")
Dim statementBorderStyle =CurrentADC.PropValue("statementBorderStyle")
Dim statementShadow =CurrentADC.PropValue("statementShadow")
Dim statementFontSize =CurrentADC.PropValue("statementFontSize")

Dim fontSize =CurrentADC.PropValue("fontSize")

Dim statementTextPadding =CurrentADC.PropValue("statementTextPadding")
Dim statementTextLineHeight =CurrentADC.PropValue("statementTextLineHeight")
Dim statementHeight =CurrentADC.PropValue("statementHeight")

Dim counterBorderColour =CurrentADC.PropValue("counterBorderColour")
Dim counterBorderRadius =CurrentADC.PropValue("counterBorderRadius")
Dim counterBorderWidth =CurrentADC.PropValue("counterBorderWidth")
Dim counterPrimaryColour =CurrentADC.PropValue("counterPrimaryColour")
Dim counterFontColour =CurrentADC.PropValue("counterFontColour")
Dim counterDropShadow =CurrentADC.PropValue("counterDropShadow")
Dim counterAlign =CurrentADC.PropValue("counterAlign")

Dim buttonBorderColour =CurrentADC.PropValue("buttonBorderColour")
Dim buttonBorderRadius =CurrentADC.PropValue("buttonBorderRadius")
Dim buttonBorderWidth =CurrentADC.PropValue("buttonBorderWidth")
Dim buttonPrimaryColour =CurrentADC.PropValue("buttonPrimaryColour")
Dim buttonDropShadow =CurrentADC.PropValue("buttonDropShadow")
Dim buttonArrowColour =CurrentADC.PropValue("buttonArrowColour")

Dim tooltipFontSize =CurrentADC.PropValue("tooltipFontSize")
Dim tooltipFontColour =CurrentADC.PropValue("tooltipFontColour")
Dim tooltipCurvedCorners =CurrentADC.PropValue("tooltipCurvedCorners")

Dim tooltipColourPrimary =CurrentADC.PropValue("tooltipColourPrimary")
Dim tooltipBorderColour =CurrentADC.PropValue("tooltipBorderColour")
Dim tooltipBorderThickness =CurrentADC.PropValue("tooltipBorderThickness")
Dim tooltipBorderStyle =CurrentADC.PropValue("tooltipBorderStyle")

Dim borderRadius =CurrentADC.PropValue("borderRadius")
Dim dkTextPadding =CurrentADC.PropValue("dkTextPadding")
Dim dkMargin =CurrentADC.PropValue("dkMargin")
Dim dkColourPrimary =CurrentADC.PropValue("dkColourPrimary")
Dim dkFontColour =CurrentADC.PropValue("dkFontColour")
Dim dkBorderColour =CurrentADC.PropValue("dkBorderColour")
Dim dkBorderThickness =CurrentADC.PropValue("dkBorderThickness")
Dim dkBorderStyle =CurrentADC.PropValue("dkBorderStyle")
Dim dkShadow =CurrentADC.PropValue("dkShadow")
Dim showDkHoverColour =CurrentADC.PropValue("showDkHoverColour")
Dim dkHoverColourPrimary =CurrentADC.PropValue("dkHoverColourPrimary")
Dim showDkHoverFontColour =CurrentADC.PropValue("showDkHoverFontColour")
Dim dkHoverFontColour =CurrentADC.PropValue("dkHoverFontColour")
Dim showDkHoverBorder =CurrentADC.PropValue("showDkHoverBorder")
Dim dkHoverBorderColour =CurrentADC.PropValue("dkHoverBorderColour")
Dim dkHoverBorderThickness =CurrentADC.PropValue("dkHoverBorderThickness")
Dim dkHoverBorderStyle =CurrentADC.PropValue("dkHoverBorderStyle")
Dim showDkHoverShadow =CurrentADC.PropValue("showDkHoverShadow")
Dim dkHoverShadow =CurrentADC.PropValue("dkHoverShadow")
Dim dkSelectedColourPrimary =CurrentADC.PropValue("dkSelectedColourPrimary")
Dim dkSelectedFontColour =CurrentADC.PropValue("dkSelectedFontColour")
Dim dkSelectedBorderColour =CurrentADC.PropValue("dkSelectedBorderColour")
Dim dkSelectedBorderThickness =CurrentADC.PropValue("dkSelectedBorderThickness")
Dim dkSelectedBorderStyle =CurrentADC.PropValue("dkSelectedBorderStyle")
Dim dkSelectedShadow =CurrentADC.PropValue("dkSelectedShadow")

Dim controlAlign =CurrentADC.PropValue("controlAlign")

IF statementHeight = "" Then
	statementHeight = "auto"
EndIF
%}

/* General */
#adc_{%= CurrentADC.InstanceId%} {
	text-align:{%= controlAlign%};
}

.animate {
    -webkit-transition: all .5s ease-in-out;
     -moz-transition: all .5s ease-in-out;
     -o-transition: all .5s ease-in-out;
     transition: all .5s ease-in-out;
}

#adc_{%= CurrentADC.InstanceId%} .controlContainer { 
	text-align:{%= controlAlign%};
	{% IF controlAlign = "center" Then %}
		margin-left:auto;
		margin-right:auto;
	{% EndIF %}
}

#adc_{%= CurrentADC.InstanceId%} .starContainer { 
	
	display:inline-block;
	*display: inline;
    zoom: 1;
	
}

/* Statements */
#adc_{%= CurrentADC.InstanceId%} .statement 
{
	
	/* Decoration */
	{% IF CurrentADC.PropValue("statementBorderThickness") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= statementBorderThickness%} {%= statementBorderStyle%} rgb({%= statementBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= statementColourPrimary%});
	
	/* Effects */
	-webkit-border-radius:	{%= statementBorderRadius%}; 
	-moz-border-radius:		{%= statementBorderRadius%}; 
	-khtml-border-radius:	{%= statementBorderRadius%}; 
	border-radius:			{%= statementBorderRadius%};
	
	-webkit-box-shadow: {%= statementShadow%};
	-moz-box-shadow: {%= statementShadow%};
	box-shadow: {%= statementShadow%};
	
	height: {%= statementHeight%};
	 
}

#adc_{%= CurrentADC.InstanceId%} .altStatement 
{

	background-color: rgb({%= altStatementColourPrimary%});

}

#adc_{%= CurrentADC.InstanceId%} .statement_text 
{ 
	font-size:{%= statementFontSize%};
	text-align:{%= statementTextAlign%};
	color:rgb({%= statementFontColour%});
	padding:{%= statementTextPadding%};
	line-height:{%= statementTextLineHeight%};
}

/* Counter */
#adc_{%= CurrentADC.InstanceId%} .counterContainer { text-align:{%= counterAlign%}; }
#adc_{%= CurrentADC.InstanceId%} .counter { 
	{% IF CurrentADC.PropValue("counterBorderWidth") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= counterBorderWidth%} solid rgb({%= counterBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= counterPrimaryColour%});
	
	display:inline-block; 
	border-radius:{%= counterBorderRadius%}; 
	margin:10px 0px; 
	width:30px; 
	height:30px;
	
	-webkit-box-shadow: {%= counterDropShadow%};
	-moz-box-shadow: {%= counterDropShadow%};
	box-shadow: {%= counterDropShadow%};
}
#adc_{%= CurrentADC.InstanceId%} .counterNumber { padding:25%; text-align:center; margin:0px auto; color:rgb({%= counterFontColour%}); }

#adc_{%= CurrentADC.InstanceId%} .previousStatement,
#adc_{%= CurrentADC.InstanceId%} .nextStatement,
#adc_{%= CurrentADC.InstanceId%} .Btn
{   
	/* Decoration */
	{% IF CurrentADC.PropValue("buttonBorderWidth") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= buttonBorderWidth%} solid rgb({%= buttonBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= buttonPrimaryColour%});
	
	/* Effects */
	-webkit-border-radius:	{%= buttonBorderRadius%}; 
	-moz-border-radius:		{%= buttonBorderRadius%}; 
	-khtml-border-radius:	{%= buttonBorderRadius%}; 
	border-radius:			{%= buttonBorderRadius%}; 
	
	-webkit-box-shadow: {%= buttonDropShadow%};
	-moz-box-shadow: {%= buttonDropShadow%};
	box-shadow: {%= buttonDropShadow%};
	
}

#adc_{%= CurrentADC.InstanceId%} .nextStatement .img, #adc_{%= CurrentADC.InstanceId%} .previousStatement .img { background-position:{%= buttonArrowColour%}; }

#adc_{%= CurrentADC.InstanceId%} .qtip-content { 
	color:rgb({%= tooltipFontColour%}); 
	font-size:{%= tooltipFontSize%};
}

#adc_{%= CurrentADC.InstanceId%} .dk { 

	display: inline-block;
	*display: inline;
    zoom: 1;

	/* Decoration */
	{% IF CurrentADC.PropValue("dkBorderThickness") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= dkBorderThickness%} {%= dkBorderStyle%} rgb({%= dkBorderColour%});
	{% EndIF %}	
	background-color: rgb({%= dkColourPrimary%});
	
	/* Effects */
	-webkit-border-radius:	{%= borderRadius%}; 
	-moz-border-radius:		{%= borderRadius%}; 
	-khtml-border-radius:	{%= borderRadius%}; 
	border-radius:			{%= borderRadius%};
	
	-webkit-box-shadow: {%= dkShadow%};
	-moz-box-shadow: {%= dkShadow%};
	box-shadow: {%= dkShadow%};
	
	padding: {%= dkTextPadding%};
	
	color: rgb({%= dkFontColour%});
	
	margin: {%= dkMargin%};
}


#adc_{%= CurrentADC.InstanceId%} .dk:hover
{
	/* Element */	
	/* Decoration */
	{% IF showDkHoverBorder = "1" Then %}
		border: {%= dkHoverBorderThickness%} {%= dkHoverBorderStyle%} rgb({%= dkHoverBorderColour%});
	{% Else %}
		border: {%= dkBorderThickness%} {%= dkBorderStyle%} rgb({%= dkBorderColour%});
	{% EndIF %}
	
	{% IF showDkHoverColour = "1" Then %}
		background-color: rgb({%= dkHoverColourPrimary%});
	{% EndIF %}
	{% IF showDkHoverShadow = "1" Then %}
		-webkit-box-shadow: {%= dkHoverShadow%};
		-moz-box-shadow: {%= dkHoverShadow%};
		box-shadow: {%= dkHoverShadow%};
	{% EndIF %}
	
	{% IF showDkHoverFontColour = "1" Then %}
		color:rgb({%= dkHoverFontColour%});
	{% EndIF %}
}

#adc_{%= CurrentADC.InstanceId%} .dk.selected, #adc_{%= CurrentADC.InstanceId%} .dk.selected:hover 
{	
    /* Decoration */	
	{% IF CurrentADC.PropValue("dkSelectedBorderThickness") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= dkSelectedBorderThickness%} {%= dkSelectedBorderStyle%} rgb({%= dkSelectedBorderColour%});
	{% EndIF %}	
	background: rgb({%= dkSelectedColourPrimary%});
	
	-webkit-box-shadow: {%= dkSelectedShadow%};
	-moz-box-shadow: {%= dkSelectedShadow%};
	box-shadow: {%= dkSelectedShadow%};

    color:rgb({%= dkSelectedFontColour%});
}

/*---------------- TOOLTIPS ----------------*/
.tippy-tooltip { 
	text-decoration:none;
	padding: 8px 10px;
	
	font-size: {%= tooltipFontSize%};
	line-height: 1.2;
	
	{% IF tooltipBorderThickness <> "none" Then %}
		border: {%= tooltipBorderThickness%} {%= tooltipBorderStyle%} rgb({%= tooltipBorderColour%});
	{% Else %}
		border: none;
	{% EndIf %}
	-webkit-border-radius:	{%= tooltipCurvedCorners%}; 
	-moz-border-radius:		{%= tooltipCurvedCorners%}; 
	-khtml-border-radius:	{%= tooltipCurvedCorners%}; 
	border-radius:			{%= tooltipCurvedCorners%};
}

.tippy-tooltip [x-circle] { 
	background-color: rgb({%= tooltipColourPrimary%});
}

.tippy-tooltip .tippy-tooltip-content { 
	color: rgb({%= tooltipFontColour%}) !important;
}