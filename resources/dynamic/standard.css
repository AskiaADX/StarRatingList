/* standard.css */
{%
Dim statementTextAlign =CurrentADC.PropValue("statementTextAlign")

Dim statementColourPrimary =CurrentADC.PropValue("statementColourPrimary")
Dim statementColourSecondary =CurrentADC.PropValue("statementColourSecondary")
Dim altStatementColourPrimary =CurrentADC.PropValue("altStatementColourPrimary")
Dim altStatementColourSecondary =CurrentADC.PropValue("altStatementColourSecondary")
Dim statementFontColour =CurrentADC.PropValue("statementFontColour")
Dim statementBorderColour =CurrentADC.PropValue("statementBorderColour")
Dim statementBorderRadius =CurrentADC.PropValue("statementBorderRadius")
Dim statementBorderThickness =CurrentADC.PropValue("statementBorderThickness")
Dim statementBorderStyle =CurrentADC.PropValue("statementBorderStyle")
Dim statementShadow =CurrentADC.PropValue("statementShadow")
Dim statementFontSize =CurrentADC.PropValue("statementFontSize")

Dim fontSize =CurrentADC.PropValue("fontSize")

Dim statementTextPadding =CurrentADC.PropValue("statementTextPadding")
Dim statementTextLineHeight =CurrentADC.PropValue("statementTextLineHeight")
Dim statementHeight =CurrentADC.PropValue("statementHeight")

Dim counterBorderColour =CurrentADC.PropValue("counterBorderColour")
Dim counterBorderRadius =CurrentADC.PropValue("counterBorderRadius")
Dim counterBorderWidth =CurrentADC.PropValue("counterBorderWidth")
Dim counterPrimaryColour =CurrentADC.PropValue("counterPrimaryColour")
Dim counterSecondaryColour =CurrentADC.PropValue("counterSecondaryColour")
Dim counterFontColour =CurrentADC.PropValue("counterFontColour")
Dim counterDropShadow =CurrentADC.PropValue("counterDropShadow")
Dim counterAlign =CurrentADC.PropValue("counterAlign")

Dim buttonBorderColour =CurrentADC.PropValue("buttonBorderColour")
Dim buttonBorderRadius =CurrentADC.PropValue("buttonBorderRadius")
Dim buttonBorderWidth =CurrentADC.PropValue("buttonBorderWidth")
Dim buttonPrimaryColour =CurrentADC.PropValue("buttonPrimaryColour")
Dim buttonSecondaryColour =CurrentADC.PropValue("buttonSecondaryColour")
Dim buttonDropShadow =CurrentADC.PropValue("buttonDropShadow")
Dim buttonArrowColour =CurrentADC.PropValue("buttonArrowColour")

Dim tooltipFontSize =CurrentADC.PropValue("tooltipFontSize")
Dim tooltipFontColour =CurrentADC.PropValue("tooltipFontColour")
Dim tooltipCurvedCorners =CurrentADC.PropValue("tooltipCurvedCorners")

Dim tooltipColourPrimary =CurrentADC.PropValue("tooltipColourPrimary")
Dim tooltipColourSecondary =CurrentADC.PropValue("tooltipColourSecondary")
Dim tooltipBorderColour =CurrentADC.PropValue("tooltipBorderColour")
Dim tooltipBorderThickness =CurrentADC.PropValue("tooltipBorderThickness")
Dim tooltipBorderStyle =CurrentADC.PropValue("tooltipBorderStyle")

Dim borderRadius =CurrentADC.PropValue("borderRadius")
Dim dkTextPadding =CurrentADC.PropValue("dkTextPadding")
Dim dkMargin =CurrentADC.PropValue("dkMargin")
Dim dkColourPrimary =CurrentADC.PropValue("dkColourPrimary")
Dim dkColourSecondary =CurrentADC.PropValue("dkColourSecondary")
Dim dkFontColour =CurrentADC.PropValue("dkFontColour")
Dim dkBorderColour =CurrentADC.PropValue("dkBorderColour")
Dim dkBorderThickness =CurrentADC.PropValue("dkBorderThickness")
Dim dkBorderStyle =CurrentADC.PropValue("dkBorderStyle")
Dim dkShadow =CurrentADC.PropValue("dkShadow")
Dim showDkHoverColour =CurrentADC.PropValue("showDkHoverColour")
Dim dkHoverColourPrimary =CurrentADC.PropValue("dkHoverColourPrimary")
Dim dkHoverColourSecondary =CurrentADC.PropValue("dkHoverColourSecondary")
Dim showDkHoverFontColour =CurrentADC.PropValue("showDkHoverFontColour")
Dim dkHoverFontColour =CurrentADC.PropValue("dkHoverFontColour")
Dim showDkHoverBorder =CurrentADC.PropValue("showDkHoverBorder")
Dim dkHoverBorderColour =CurrentADC.PropValue("dkHoverBorderColour")
Dim dkHoverBorderThickness =CurrentADC.PropValue("dkHoverBorderThickness")
Dim dkHoverBorderStyle =CurrentADC.PropValue("dkHoverBorderStyle")
Dim showDkHoverShadow =CurrentADC.PropValue("showDkHoverShadow")
Dim dkHoverShadow =CurrentADC.PropValue("dkHoverShadow")
Dim dkSelectedColourPrimary =CurrentADC.PropValue("dkSelectedColourPrimary")
Dim dkSelectedColourSecondary =CurrentADC.PropValue("dkSelectedColourSecondary")
Dim dkSelectedFontColour =CurrentADC.PropValue("dkSelectedFontColour")
Dim dkSelectedBorderColour =CurrentADC.PropValue("dkSelectedBorderColour")
Dim dkSelectedBorderThickness =CurrentADC.PropValue("dkSelectedBorderThickness")
Dim dkSelectedBorderStyle =CurrentADC.PropValue("dkSelectedBorderStyle")
Dim dkSelectedShadow =CurrentADC.PropValue("dkSelectedShadow")

Dim controlAlign =CurrentADC.PropValue("controlAlign")

IF statementHeight = "" Then
	statementHeight = "auto"
EndIF
%}

/* General */
#adc_{%= CurrentADC.InstanceId%} {
	text-align:{%= controlAlign%};
}

#adc_{%= CurrentADC.InstanceId%} .controlContainer { 
	text-align:{%= controlAlign%};
	{% IF controlAlign = "center" Then %}
		margin-left:auto;
		margin-right:auto;
	{% EndIF %}
}

#adc_{%= CurrentADC.InstanceId%} .starContainer { 
	
	display:inline-block;
	*display: inline;
    zoom: 1;
	
}

/* Statements */
#adc_{%= CurrentADC.InstanceId%} .statement 
{
	
	/* Decoration */
	{% IF CurrentADC.PropValue("statementBorderThickness") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= statementBorderThickness%} {%= statementBorderStyle%} rgb({%= statementBorderColour%});
	{% EndIF %}	
	background: rgb({%= statementColourPrimary%}); 
	background: -moz-linear-gradient(top,  rgb({%= statementColourPrimary%}) 0%, rgb({%= statementColourSecondary%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= statementColourPrimary%})), color-stop(100%,rgb({%= statementColourSecondary%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= statementColourPrimary%}) 0%,rgb({%= statementColourSecondary%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= statementColourPrimary%}) 0%,rgb({%= statementColourSecondary%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= statementColourPrimary%}) 0%,rgb({%= statementColourSecondary%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= statementColourPrimary%}) 0%,rgb({%= statementColourSecondary%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= statementColourPrimary.ToHexa()%}, endColorstr={%= statementColourSecondary.ToHexa()%},GradientType=0 ); /* IE6-8 */
	
	/* Effects */
	-webkit-border-radius:	{%= statementBorderRadius%}; 
	-moz-border-radius:		{%= statementBorderRadius%}; 
	-khtml-border-radius:	{%= statementBorderRadius%}; 
	border-radius:			{%= statementBorderRadius%};
	
	-webkit-box-shadow: {%= statementShadow%};
	-moz-box-shadow: {%= statementShadow%};
	box-shadow: {%= statementShadow%};
	
	height: {%= statementHeight%};
	 
}

#adc_{%= CurrentADC.InstanceId%} .altStatement 
{

	background: rgb({%= altStatementColourPrimary%}); 
	background: -moz-linear-gradient(top,  rgb({%= altStatementColourPrimary%}) 0%, rgb({%= altStatementColourSecondary%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= altStatementColourPrimary%})), color-stop(100%,rgb({%= altStatementColourSecondary%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= altStatementColourPrimary%}) 0%,rgb({%= altStatementColourSecondary%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= altStatementColourPrimary%}) 0%,rgb({%= altStatementColourSecondary%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= altStatementColourPrimary%}) 0%,rgb({%= altStatementColourSecondary%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= altStatementColourPrimary%}) 0%,rgb({%= altStatementColourSecondary%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= altStatementColourPrimary.ToHexa()%}, endColorstr={%= altStatementColourSecondary.ToHexa()%},GradientType=0 ); /* IE6-8 */

}

#adc_{%= CurrentADC.InstanceId%} .statement_text 
{ 
	font-size:{%= statementFontSize%};
	text-align:{%= statementTextAlign%};
	color:rgb({%= statementFontColour%});
	padding:{%= statementTextPadding%};
	line-height:{%= statementTextLineHeight%};
}

/* Counter */
#adc_{%= CurrentADC.InstanceId%} .counterContainer { text-align:{%= counterAlign%}; }
#adc_{%= CurrentADC.InstanceId%} .counter { 
	{% IF CurrentADC.PropValue("counterBorderWidth") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= counterBorderWidth%} solid rgb({%= counterBorderColour%});
	{% EndIF %}	
	background: rgb({%= counterPrimaryColour%}); 
	background: -moz-linear-gradient(top,  rgb({%= counterPrimaryColour%}) 0%, rgb({%= counterSecondaryColour%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= counterPrimaryColour%})), color-stop(100%,rgb({%= counterSecondaryColour%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= counterPrimaryColour%}) 0%,rgb({%= counterSecondaryColour%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= counterPrimaryColour%}) 0%,rgb({%= counterSecondaryColour%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= counterPrimaryColour%}) 0%,rgb({%= counterSecondaryColour%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= counterPrimaryColour%}) 0%,rgb({%= counterSecondaryColour%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= counterPrimaryColour.ToHexa()%}, endColorstr={%= counterSecondaryColour.ToHexa()%},GradientType=0 ); /* IE6-8 */
	
	display:inline-block; 
	border-radius:{%= counterBorderRadius%}; 
	margin:10px 0px; 
	width:30px; 
	height:30px;
	
	-webkit-box-shadow: {%= counterDropShadow%};
	-moz-box-shadow: {%= counterDropShadow%};
	box-shadow: {%= counterDropShadow%};
}
#adc_{%= CurrentADC.InstanceId%} .counterNumber { padding:25%; text-align:center; margin:0px auto; color:rgb({%= counterFontColour%}); }

#adc_{%= CurrentADC.InstanceId%} .previousStatement,
#adc_{%= CurrentADC.InstanceId%} .nextStatement,
#adc_{%= CurrentADC.InstanceId%} .Btn
{   
	/* Decoration */
	{% IF CurrentADC.PropValue("buttonBorderWidth") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= buttonBorderWidth%} solid rgb({%= buttonBorderColour%});
	{% EndIF %}	
	background: rgb({%= buttonPrimaryColour%}); 
	background: -moz-linear-gradient(top,  rgb({%= buttonPrimaryColour%}) 0%, rgb({%= buttonSecondaryColour%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= buttonPrimaryColour%})), color-stop(100%,rgb({%= buttonSecondaryColour%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= buttonPrimaryColour%}) 0%,rgb({%= buttonSecondaryColour%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= buttonPrimaryColour%}) 0%,rgb({%= buttonSecondaryColour%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= buttonPrimaryColour%}) 0%,rgb({%= buttonSecondaryColour%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= buttonPrimaryColour%}) 0%,rgb({%= buttonSecondaryColour%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= buttonPrimaryColour.ToHexa()%}, endColorstr={%= buttonSecondaryColour.ToHexa()%},GradientType=0 ); /* IE6-8 */
	
	/* Effects */
	-webkit-border-radius:	{%= buttonBorderRadius%}; 
	-moz-border-radius:		{%= buttonBorderRadius%}; 
	-khtml-border-radius:	{%= buttonBorderRadius%}; 
	border-radius:			{%= buttonBorderRadius%}; 
	
	-webkit-box-shadow: {%= buttonDropShadow%};
	-moz-box-shadow: {%= buttonDropShadow%};
	box-shadow: {%= buttonDropShadow%};
	
}

#adc_{%= CurrentADC.InstanceId%} .nextStatement .img, #adc_{%= CurrentADC.InstanceId%} .previousStatement .img { background-position:{%= buttonArrowColour%}; }

#adc_{%= CurrentADC.InstanceId%} .qtip-content { 
	color:rgb({%= tooltipFontColour%}) !important; 
	font-size:{%= tooltipFontSize%} !important;
}

#adc_{%= CurrentADC.InstanceId%} .dk { 

	display: inline-block;
	*display: inline;
    zoom: 1;

	/* Decoration */
	{% IF CurrentADC.PropValue("dkBorderThickness") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= dkBorderThickness%} {%= dkBorderStyle%} rgb({%= dkBorderColour%});
	{% EndIF %}	
	background: rgb({%= dkColourPrimary%}); 
	background: -moz-linear-gradient(top,  rgb({%= dkColourPrimary%}) 0%, rgb({%= dkColourSecondary%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= dkColourPrimary%})), color-stop(100%,rgb({%= dkColourSecondary%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= dkColourPrimary%}) 0%,rgb({%= dkColourSecondary%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= dkColourPrimary%}) 0%,rgb({%= dkColourSecondary%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= dkColourPrimary%}) 0%,rgb({%= dkColourSecondary%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= dkColourPrimary%}) 0%,rgb({%= dkColourSecondary%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= dkColourPrimary.ToHexa()%}, endColorstr={%= dkColourSecondary.ToHexa()%},GradientType=0 ); /* IE6-8 */
	
	/* Effects */
	-webkit-border-radius:	{%= borderRadius%}; 
	-moz-border-radius:		{%= borderRadius%}; 
	-khtml-border-radius:	{%= borderRadius%}; 
	border-radius:			{%= borderRadius%};
	
	-webkit-box-shadow: {%= dkShadow%};
	-moz-box-shadow: {%= dkShadow%};
	box-shadow: {%= dkShadow%};
	
	padding: {%= dkTextPadding%};
	
	color: rgb({%= dkFontColour%});
	
	margin: {%= dkMargin%};
}


#adc_{%= CurrentADC.InstanceId%} .dk:hover
{
	/* Element */	
	/* Decoration */
	{% IF showDkHoverBorder = "1" Then %}
		border: {%= dkHoverBorderThickness%} {%= dkHoverBorderStyle%} rgb({%= dkHoverBorderColour%}) !important;
	{% Else %}
		border: {%= dkBorderThickness%} {%= dkBorderStyle%} rgb({%= dkBorderColour%}) !important;
	{% EndIF %}
	
	{% IF showDkHoverColour = "1" Then %}
		background: rgb({%= dkHoverColourPrimary%}) !important;
		background: -moz-linear-gradient(top,  rgb({%= dkHoverColourPrimary%}) 0%, rgb({%= dkHoverColourSecondary%}) 100%) !important; /* FF3.6+ */
		background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= dkHoverColourPrimary%})), color-stop(100%,rgb({%= dkHoverColourSecondary%}))) !important; /* Chrome,Safari4+ */
		background: -webkit-linear-gradient(top,  rgb({%= dkHoverColourPrimary%}) 0%,rgb({%= dkHoverColourSecondary%}) 100%) !important; /* Chrome10+,Safari5.1+ */
		background: -o-linear-gradient(top,  rgb({%= dkHoverColourPrimary%}) 0%,rgb({%= dkHoverColourSecondary%}) 100%) !important; /* Opera 11.10+ */
		background: -ms-linear-gradient(top,  rgb({%= dkHoverColourPrimary%}) 0%,rgb({%= dkHoverColourSecondary%}) 100%) !important; /* IE10+ */
		background: linear-gradient(to bottom,  rgb({%= dkHoverColourPrimary%}) 0%,rgb({%= dkHoverColourSecondary%}) 100%) !important; /* W3C */
		filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='{%= dkHoverColourPrimary.ToHexa()%}', endColorstr='{%= dkHoverColourSecondary.ToHexa()%}',GradientType=0 ) !important; /* IE6-8 */
	{% EndIF %}
	{% IF showDkHoverShadow = "1" Then %}
		-webkit-box-shadow: {%= dkHoverShadow%};
		-moz-box-shadow: {%= dkHoverShadow%};
		box-shadow: {%= dkHoverShadow%};
	{% EndIF %}
	
	{% IF showDkHoverFontColour = "1" Then %}
		color:rgb({%= dkHoverFontColour%}) !important;
	{% EndIF %}
}

#adc_{%= CurrentADC.InstanceId%} .dk.selected 
{	
    /* Decoration */	
	{% IF CurrentADC.PropValue("dkSelectedBorderThickness") = "none" Then %}
		border: none;
	{% Else %}
		border: {%= dkSelectedBorderThickness%} {%= dkSelectedBorderStyle%} rgb({%= dkSelectedBorderColour%});
	{% EndIF %}	
	background: rgb({%= dkSelectedColourPrimary%}); 
	background: -moz-linear-gradient(top,  rgb({%= dkSelectedColourPrimary%}) 0%, rgb({%= dkSelectedColourSecondary%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= dkSelectedColourPrimary%})), color-stop(100%,rgb({%= dkSelectedColourSecondary%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= dkSelectedColourPrimary%}) 0%,rgb({%= dkSelectedColourSecondary%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= dkSelectedColourPrimary%}) 0%,rgb({%= dkSelectedColourSecondary%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= dkSelectedColourPrimary%}) 0%,rgb({%= dkSelectedColourSecondary%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= dkSelectedColourPrimary%}) 0%,rgb({%= dkSelectedColourSecondary%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= dkSelectedColourPrimary.ToHexa()%}, endColorstr={%= dkSelectedColourSecondary.ToHexa()%},GradientType=0 ); /* IE6-8 */
	
	-webkit-box-shadow: {%= dkSelectedShadow%};
	-moz-box-shadow: {%= dkSelectedShadow%};
	box-shadow: {%= dkSelectedShadow%};

    color:rgb({%= dkSelectedFontColour%});
}

/*---------------- TOOLTIPS ----------------*/

.tooltip {
  position: relative;
}
.tooltip span {
  margin-left: -999em;
  position: absolute;
}
.tooltip:hover span {
  position: absolute;
  left: 1em;
  top: 2em;
  z-index: 99;
  margin-left: 0;
  width: auto;
}
.classic { 
	text-decoration:none;
	padding: 8px 10px;
	
	background: rgb({%= tooltipColourPrimary%}); 
	background: -moz-linear-gradient(top,  rgb({%= tooltipColourPrimary%}) 0%, rgb({%= tooltipColourSecondary%}) 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgb({%= tooltipColourPrimary%})), color-stop(100%,rgb({%= tooltipColourSecondary%}))); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  rgb({%= tooltipColourPrimary%}) 0%,rgb({%= tooltipColourSecondary%}) 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  rgb({%= tooltipColourPrimary%}) 0%,rgb({%= tooltipColourSecondary%}) 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  rgb({%= tooltipColourPrimary%}) 0%,rgb({%= tooltipColourSecondary%}) 100%); /* IE10+ */
	background: linear-gradient(to bottom,  rgb({%= tooltipColourPrimary%}) 0%,rgb({%= tooltipColourSecondary%}) 100%); /* W3C */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr={%= tooltipColourPrimary.ToHexa()%}, endColorstr={%= tooltipColourSecondary.ToHexa()%},GradientType=0 ); /* IE6-8 */
	
	font-size: {%= tooltipFontSize%};
	color: rgb({%= tooltipFontColour%});
	line-height: 140%;
	
	{% IF tooltipBorderThickness <> "none" Then %}
		border: {%= tooltipBorderThickness%} {%= tooltipBorderStyle%} rgb({%= tooltipBorderColour%});
	{% Else %}
		border: none;
	{% EndIf %}
	-webkit-border-radius:	{%= tooltipCurvedCorners%}; 
	-moz-border-radius:		{%= tooltipCurvedCorners%}; 
	-khtml-border-radius:	{%= tooltipCurvedCorners%}; 
	border-radius:			{%= tooltipCurvedCorners%};
	box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
	-webkit-box-shadow: 2px 2px rgba(0, 0, 0, 0.1);
	-moz-box-shadow: 2px 2px rgba(0, 0, 0, 0.1);
}
.custom { padding: 0.5em 0.8em 0.8em 2em; }
* html a:hover { background: transparent; }